/****************************************************************************
** файл:        psnReadWrite.h
** версия:
** дата:
** изменен:
** автор:       Захаров О.С.
**
** описание:    Поддерживает работу с файлами (чтение и запись).
****************************************************************************/

#ifndef _READWRITE_H
#define _READWRITE_H

#include "nb\nb.h"
#include "hw\BimHW.h"

  // Уникальный идентификатор файла для хранения биометрических образов.
  // Вначале записывается ууид файла, затем ууид образов, затем количество образов,
  // затем размер тела каждого БО в байтах, а потом сами БО.
  // {5948D0C1-399F-431b-B2D3-E02086AE3A42}
  static const nbUuid nbTYPE_UUUD_COUN_SIZE_BIM = 
    {0x478cb2e2, 0x5bf2, 0x4622, {0x8a,0xaa,0x32,0x1c,0xfa,0x0d,0x6d,0x8c}};

  // Уникальный идентификатор, обозначающий файл с образами "Сжатая база Все Чужие"
  // {16AA29C9-5998-4737-BBE0-4CA7002DDDF9}
  static const nbUuid nbSIMG_TYPE_COMPRESSED = 
    {0x16aa29c9,0x5998,0x4737,{0xbb,0xe0,0x4c,0xa7,0x0,0x2d,0xdd,0xf9}};

  // Получить количество образов, хранящихся в ресурсах
  nbResult GetBimCount( const uint8_t data[], uint32_t *maxCount );

  //////////////////////////////////////////////////////////////////////////
  //назначение: загрузить биометрические образы из файла ресурсов
  //описание:   считать записанные в базу образы СВОЕГО или ЧУЖОГО.
  //            На вход подаётся вектор указателей на nbBim размером maxCount.
  //            Если maxCount меньше количества реально хранящихся в базе образов, 
  //            то возвращает nbE_OUT_OF_MEMORY и в maxCount записываем реальное
  //            количество образов.
  //            Память под bimBase выделяется внутри функции.
  //            Нужно очистить после вызова функции.
  //параметры:
  //  data     - [вх]     указатель на данные, хрянящиеся в файле ресурса
  //  maxCount - [вх\вых] максимально возможное количество образов
  //	bimBase	 - [вх\вых] биометрические образы
  //возвращает: nbS_OK, если всё нормально, либо код ошибки
  nbResult LoadBimFromResource ( const uint8_t data[], uint32_t *maxCount, nbBim **bimBase );

  //////////////////////////////////////////////////////////////////////////////////////////////////
  //назначение: загрузить матрицу векторов биометрических параметров из файла ресурсов
  //описание:   считать записанные в базу параметры образов СВОЕГО или ЧУЖОГО.
  //            На вход подаётся пустая матрица векторов биом. параметров.
  //            Память под vbpsBase выделяется внутри функции.
  //            Нужно очистить после вызова функции.
  //параметры:
  //  data      - [вх]  указатель на данные, хрянящиеся в файле ресурса
  //	vbpsBase  - [вых] матрица векторов биометрических параметров
  //возвращает: nbS_OK, если всё нормально, либо код ошибки
  nbResult LoadMatrixFromResource ( const uint8_t data[], nbMatrix **vbpsBase );

#endif
