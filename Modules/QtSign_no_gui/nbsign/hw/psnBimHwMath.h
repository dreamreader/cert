#pragma once
/****************************************************************************
** файл:        psnBimHwMath.h
** версия:
** дата:        24.03.2007
** изменен:
** автор:       Майоров А.В., Захаров О.С.
**
** описание:    Преобразование биометрических рукописных образов,
**              быстрое неоптимизированное преобразование Фурье.
****************************************************************************/

#ifndef _PSN_BIMHW_MATH_H
#define _PSN_BIMHW_MATH_H

#include "..\nbclasses\nbcTypes.h"
#include "..\nbcc\nbccMath.h"
#include "BimHw.h"

#define psnHW_SCALE_COUNT    512   // фиксированное число точек после масштабирования
#define psnFFT_COEF_COUNT    416   // число коэффициентов Фурье в преобразовании
#define psnP_COEF_COUNT      64    // число коэффициентов Фурье, полученных из давления

// Приведение выборки к новому масштабу dpi2
void scaleHwByDpi(nbPointHw *pt, uint32_t ptCount, uint16_t dpiX, uint16_t dpiX2, uint16_t dpiY, uint16_t dpiY2);

//назначение: масштабирование выборки до 512 элементов с исключением точек без давления
//описание:
//  Применяется линейная интерполяция между соседними элементами,
//  первый и последний элемент остаются без изменений
//  (если число элементов больше psnHW_SCALE_COUNT, то используются
//  только psnHW_SCALE_COUNT элементов, равномерно распред. в массиве)
//параметры:
//  pt       - [вх]  выборка из произвольного числа элементов
//  ptCount  - [вх]  число элементов в выборке
//  pt2      - [вых] результирующая выборка из 512 элементов
//  midP     - [вх]  среднее давление ("обычное, нормальное" давление, относительно которого определяется коэффициент давления)
void scaleHwTo512(const nbPointHw *pt,  uint32_t ptCount, nbPointHw *pt2);

//назначение: нормализация значений по известному среднему и дисперсии нормального
//            распределения (могут использоваться характеристики базы "Все чужие")
//параметры:
//  w      - [вх/вых] нормализуемый вектор
//  aver   - [вх] вектор средних значений
//  disp   - [вх] вектор дисперсий
//  eCount - [вх] число элементов в каждом из векторов
//  shift  - [вх] смещение в нормализуемом векторе
void normR32(Vbp &w, const Vbp &aver, const Vbp &disp, uint32_t eCount, uint32_t shift = 0);

//назначение: сдвиг начала образа в нулевую точку
//параметры:
//  pt      - [вх/вых] набор точек
//  ptCount - [вх]     количество точек
void shiftHwToOrigin(nbPointHw *pt, uint32_t ptCount);

//назначение: быстрое преобразование Фурье для вектора точек
//параметры:
//  pt  - [вх]  512 точек исходного образа
//  w   - [вых] выходной вектор 416 непрерывных вещественных значений в формате nbVBP_FORMAT_R32
void fftHw512ToW416R32(const nbPointHw *pt, Vbp &w);

//  pt     - [вх]  512 точек исходного образа
//  w      - [вых] выходной вектор psnFFT_COEF_COUNT+psnP_COEF_COUNT непрерывных вещественных значений в формате nbVBP_FORMAT_R32
//  shift  - [вх]  смещение для записи коэффициентов давления
void fftHw512PToW64R32(const nbPointHw *pt, Vbp &w, uint32_t shift);

#endif
